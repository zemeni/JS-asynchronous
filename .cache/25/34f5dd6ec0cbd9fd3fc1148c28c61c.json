{"id":"asynchronous/CallbackHell.js","dependencies":[{"name":"/home/babu/JS-asynchronous/package.json","includedInParent":true,"mtime":1657809575964},{"name":"regenerator-runtime/runtime","loc":{"line":64,"column":7,"index":1656},"parent":"/home/babu/JS-asynchronous/asynchronous/CallbackHell.js","resolved":"/home/babu/JS-asynchronous/node_modules/regenerator-runtime/runtime.js"},{"name":"axios","loc":{"line":65,"column":18,"index":1705},"parent":"/home/babu/JS-asynchronous/asynchronous/CallbackHell.js","resolved":"/home/babu/JS-asynchronous/node_modules/axios/index.js"}],"generated":{"js":"\"use strict\";\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar BASE_URL = 'https://jsonplaceholder.typicode.com/posts';\n\nvar getPosts = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var _yield$axios$get, data;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _axios.default.get(\"\".concat(BASE_URL));\n\n          case 2:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            console.log(data[0]);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getPosts() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar post = {\n  title: 'title',\n  body: 'body'\n};\n\nvar createPost = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var _yield$axios$post, data;\n\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _axios.default.post(BASE_URL, post);\n\n          case 2:\n            _yield$axios$post = _context2.sent;\n            data = _yield$axios$post.data;\n            console.log(data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function createPost() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar fakePosts = [];\n\nvar deletePost = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(post) {\n    var posts;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            posts = fakePosts;\n            _context3.prev = 1;\n            posts.filter(function (p) {\n              return p.id != post.id;\n            });\n            _context3.next = 5;\n            return _axios.default.delete(BASE_URL + '/' + post.id);\n\n          case 5:\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](1);\n            posts = fakePosts;\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 7]]);\n  }));\n\n  return function deletePost(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\ncreatePost();\ncreatePost();\ncreatePost();\ngetPosts();\ndeletePost(post);\ngetPosts();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":64,"column":0}},{"generated":{"line":5,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":65,"column":0}},{"generated":{"line":11,"column":47},"source":"asynchronous/CallbackHell.js","original":{"line":2,"column":0}},{"generated":{"line":17,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":66,"column":0}},{"generated":{"line":17,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":66,"column":6},"name":"BASE_URL"},{"generated":{"line":17,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":66,"column":14}},{"generated":{"line":17,"column":15},"source":"asynchronous/CallbackHell.js","original":{"line":66,"column":17}},{"generated":{"line":17,"column":59},"source":"asynchronous/CallbackHell.js","original":{"line":66,"column":0}},{"generated":{"line":19,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":0}},{"generated":{"line":19,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":6},"name":"getPosts"},{"generated":{"line":19,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":14}},{"generated":{"line":20,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":14}},{"generated":{"line":20,"column":72},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":21,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":23,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":24,"column":6},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":25,"column":8},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":26,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":27,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":28,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":28,"column":19},"source":"asynchronous/CallbackHell.js","original":{"line":69,"column":25},"name":"axios"},{"generated":{"line":28,"column":33},"source":"asynchronous/CallbackHell.js","original":{"line":69,"column":25}},{"generated":{"line":28,"column":34},"source":"asynchronous/CallbackHell.js","original":{"line":69,"column":31},"name":"get"},{"generated":{"line":28,"column":37},"source":"asynchronous/CallbackHell.js","original":{"line":69,"column":25}},{"generated":{"line":28,"column":48},"source":"asynchronous/CallbackHell.js","original":{"line":69,"column":38},"name":"BASE_URL"},{"generated":{"line":28,"column":56},"source":"asynchronous/CallbackHell.js","original":{"line":69,"column":25}},{"generated":{"line":28,"column":58},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":30,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":31,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":32,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":69,"column":11},"name":"data"},{"generated":{"line":32,"column":16},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":32,"column":36},"source":"asynchronous/CallbackHell.js","original":{"line":69,"column":11},"name":"data"},{"generated":{"line":32,"column":40},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":33,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":70,"column":4},"name":"console"},{"generated":{"line":33,"column":19},"source":"asynchronous/CallbackHell.js","original":{"line":70,"column":11}},{"generated":{"line":33,"column":20},"source":"asynchronous/CallbackHell.js","original":{"line":70,"column":12},"name":"log"},{"generated":{"line":33,"column":23},"source":"asynchronous/CallbackHell.js","original":{"line":70,"column":4}},{"generated":{"line":33,"column":24},"source":"asynchronous/CallbackHell.js","original":{"line":70,"column":16},"name":"data"},{"generated":{"line":33,"column":28},"source":"asynchronous/CallbackHell.js","original":{"line":70,"column":20}},{"generated":{"line":33,"column":29},"source":"asynchronous/CallbackHell.js","original":{"line":70,"column":21}},{"generated":{"line":33,"column":30},"source":"asynchronous/CallbackHell.js","original":{"line":70,"column":20}},{"generated":{"line":33,"column":31},"source":"asynchronous/CallbackHell.js","original":{"line":70,"column":4}},{"generated":{"line":35,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":36,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":37,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":38,"column":8},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":39,"column":6},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":40,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":41,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":17}},{"generated":{"line":41,"column":3},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":14}},{"generated":{"line":43,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":14}},{"generated":{"line":43,"column":18},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":6},"name":"getPosts"},{"generated":{"line":43,"column":26},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":14}},{"generated":{"line":44,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":14}},{"generated":{"line":45,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":14}},{"generated":{"line":46,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":14}},{"generated":{"line":46,"column":3},"source":"asynchronous/CallbackHell.js","original":{"line":68,"column":0}},{"generated":{"line":48,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":73,"column":0}},{"generated":{"line":48,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":73,"column":6},"name":"post"},{"generated":{"line":48,"column":8},"source":"asynchronous/CallbackHell.js","original":{"line":73,"column":10}},{"generated":{"line":48,"column":11},"source":"asynchronous/CallbackHell.js","original":{"line":73,"column":13}},{"generated":{"line":49,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":74,"column":4},"name":"title"},{"generated":{"line":49,"column":7},"source":"asynchronous/CallbackHell.js","original":{"line":74,"column":9}},{"generated":{"line":49,"column":9},"source":"asynchronous/CallbackHell.js","original":{"line":74,"column":10}},{"generated":{"line":49,"column":16},"source":"asynchronous/CallbackHell.js","original":{"line":73,"column":13}},{"generated":{"line":50,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":75,"column":4},"name":"body"},{"generated":{"line":50,"column":6},"source":"asynchronous/CallbackHell.js","original":{"line":75,"column":8}},{"generated":{"line":50,"column":8},"source":"asynchronous/CallbackHell.js","original":{"line":75,"column":9}},{"generated":{"line":51,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":73,"column":13}},{"generated":{"line":51,"column":1},"source":"asynchronous/CallbackHell.js","original":{"line":73,"column":0}},{"generated":{"line":53,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":0}},{"generated":{"line":53,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":6},"name":"createPost"},{"generated":{"line":53,"column":14},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":16}},{"generated":{"line":54,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":16}},{"generated":{"line":54,"column":73},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":55,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":57,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":58,"column":6},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":59,"column":8},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":60,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":61,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":62,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":62,"column":19},"source":"asynchronous/CallbackHell.js","original":{"line":79,"column":25},"name":"axios"},{"generated":{"line":62,"column":33},"source":"asynchronous/CallbackHell.js","original":{"line":79,"column":25}},{"generated":{"line":62,"column":34},"source":"asynchronous/CallbackHell.js","original":{"line":79,"column":31},"name":"post"},{"generated":{"line":62,"column":38},"source":"asynchronous/CallbackHell.js","original":{"line":79,"column":25}},{"generated":{"line":62,"column":39},"source":"asynchronous/CallbackHell.js","original":{"line":79,"column":36},"name":"BASE_URL"},{"generated":{"line":62,"column":47},"source":"asynchronous/CallbackHell.js","original":{"line":79,"column":25}},{"generated":{"line":62,"column":49},"source":"asynchronous/CallbackHell.js","original":{"line":79,"column":46},"name":"post"},{"generated":{"line":62,"column":53},"source":"asynchronous/CallbackHell.js","original":{"line":79,"column":25}},{"generated":{"line":62,"column":54},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":64,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":65,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":66,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":79,"column":11},"name":"data"},{"generated":{"line":66,"column":16},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":66,"column":37},"source":"asynchronous/CallbackHell.js","original":{"line":79,"column":11},"name":"data"},{"generated":{"line":66,"column":41},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":67,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":80,"column":4},"name":"console"},{"generated":{"line":67,"column":19},"source":"asynchronous/CallbackHell.js","original":{"line":80,"column":11}},{"generated":{"line":67,"column":20},"source":"asynchronous/CallbackHell.js","original":{"line":80,"column":12},"name":"log"},{"generated":{"line":67,"column":23},"source":"asynchronous/CallbackHell.js","original":{"line":80,"column":4}},{"generated":{"line":67,"column":24},"source":"asynchronous/CallbackHell.js","original":{"line":80,"column":16},"name":"data"},{"generated":{"line":67,"column":28},"source":"asynchronous/CallbackHell.js","original":{"line":80,"column":4}},{"generated":{"line":69,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":70,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":71,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":72,"column":8},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":73,"column":6},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":74,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":75,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":19}},{"generated":{"line":75,"column":3},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":16}},{"generated":{"line":77,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":16}},{"generated":{"line":77,"column":18},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":6},"name":"createPost"},{"generated":{"line":77,"column":28},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":16}},{"generated":{"line":78,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":16}},{"generated":{"line":79,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":16}},{"generated":{"line":80,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":16}},{"generated":{"line":80,"column":3},"source":"asynchronous/CallbackHell.js","original":{"line":78,"column":0}},{"generated":{"line":82,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":83,"column":0}},{"generated":{"line":82,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":83,"column":6},"name":"fakePosts"},{"generated":{"line":82,"column":13},"source":"asynchronous/CallbackHell.js","original":{"line":83,"column":15}},{"generated":{"line":82,"column":16},"source":"asynchronous/CallbackHell.js","original":{"line":83,"column":18}},{"generated":{"line":82,"column":18},"source":"asynchronous/CallbackHell.js","original":{"line":83,"column":0}},{"generated":{"line":84,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":0}},{"generated":{"line":84,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":6},"name":"deletePost"},{"generated":{"line":84,"column":14},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":16}},{"generated":{"line":85,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":16}},{"generated":{"line":85,"column":73},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":85,"column":91},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":25},"name":"post"},{"generated":{"line":85,"column":95},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":86,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":87,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":88,"column":6},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":89,"column":8},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":90,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":91,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":85,"column":8},"name":"posts"},{"generated":{"line":91,"column":17},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":91,"column":20},"source":"asynchronous/CallbackHell.js","original":{"line":85,"column":16},"name":"fakePosts"},{"generated":{"line":91,"column":29},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":92,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":93,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":8},"name":"posts"},{"generated":{"line":93,"column":17},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":13}},{"generated":{"line":93,"column":18},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":14},"name":"filter"},{"generated":{"line":93,"column":24},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":8}},{"generated":{"line":93,"column":25},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":21}},{"generated":{"line":93,"column":35},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":21},"name":"p"},{"generated":{"line":93,"column":36},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":22}},{"generated":{"line":94,"column":14},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":22}},{"generated":{"line":94,"column":21},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":26},"name":"p"},{"generated":{"line":94,"column":22},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":27}},{"generated":{"line":94,"column":23},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":28},"name":"id"},{"generated":{"line":94,"column":25},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":26}},{"generated":{"line":94,"column":29},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":34},"name":"post"},{"generated":{"line":94,"column":33},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":38}},{"generated":{"line":94,"column":34},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":39},"name":"id"},{"generated":{"line":94,"column":36},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":22}},{"generated":{"line":95,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":22}},{"generated":{"line":95,"column":13},"source":"asynchronous/CallbackHell.js","original":{"line":87,"column":8}},{"generated":{"line":96,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":97,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":97,"column":19},"source":"asynchronous/CallbackHell.js","original":{"line":88,"column":14},"name":"axios"},{"generated":{"line":97,"column":33},"source":"asynchronous/CallbackHell.js","original":{"line":88,"column":14}},{"generated":{"line":97,"column":34},"source":"asynchronous/CallbackHell.js","original":{"line":88,"column":20},"name":"delete"},{"generated":{"line":97,"column":40},"source":"asynchronous/CallbackHell.js","original":{"line":88,"column":14}},{"generated":{"line":97,"column":41},"source":"asynchronous/CallbackHell.js","original":{"line":88,"column":27},"name":"BASE_URL"},{"generated":{"line":97,"column":49},"source":"asynchronous/CallbackHell.js","original":{"line":88,"column":35}},{"generated":{"line":97,"column":52},"source":"asynchronous/CallbackHell.js","original":{"line":88,"column":38}},{"generated":{"line":97,"column":55},"source":"asynchronous/CallbackHell.js","original":{"line":88,"column":27}},{"generated":{"line":97,"column":58},"source":"asynchronous/CallbackHell.js","original":{"line":88,"column":44},"name":"post"},{"generated":{"line":97,"column":62},"source":"asynchronous/CallbackHell.js","original":{"line":88,"column":48}},{"generated":{"line":97,"column":63},"source":"asynchronous/CallbackHell.js","original":{"line":88,"column":49},"name":"id"},{"generated":{"line":97,"column":65},"source":"asynchronous/CallbackHell.js","original":{"line":88,"column":14}},{"generated":{"line":97,"column":66},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":99,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":100,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":101,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":103,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":104,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":105,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":106,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":90,"column":8},"name":"posts"},{"generated":{"line":106,"column":17},"source":"asynchronous/CallbackHell.js","original":{"line":90,"column":13}},{"generated":{"line":106,"column":20},"source":"asynchronous/CallbackHell.js","original":{"line":90,"column":16},"name":"fakePosts"},{"generated":{"line":106,"column":29},"source":"asynchronous/CallbackHell.js","original":{"line":90,"column":8}},{"generated":{"line":108,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":109,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":110,"column":12},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":111,"column":8},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":112,"column":6},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":113,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":114,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":19}},{"generated":{"line":114,"column":3},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":16}},{"generated":{"line":116,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":16}},{"generated":{"line":116,"column":18},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":6},"name":"deletePost"},{"generated":{"line":116,"column":28},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":16}},{"generated":{"line":117,"column":4},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":16}},{"generated":{"line":118,"column":2},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":16}},{"generated":{"line":119,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":16}},{"generated":{"line":119,"column":3},"source":"asynchronous/CallbackHell.js","original":{"line":84,"column":0}},{"generated":{"line":121,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":94,"column":0},"name":"createPost"},{"generated":{"line":121,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":94,"column":10}},{"generated":{"line":122,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":95,"column":0},"name":"createPost"},{"generated":{"line":122,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":95,"column":10}},{"generated":{"line":123,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":96,"column":0},"name":"createPost"},{"generated":{"line":123,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":96,"column":10}},{"generated":{"line":124,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":98,"column":0},"name":"getPosts"},{"generated":{"line":124,"column":8},"source":"asynchronous/CallbackHell.js","original":{"line":98,"column":8}},{"generated":{"line":125,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":100,"column":0},"name":"deletePost"},{"generated":{"line":125,"column":10},"source":"asynchronous/CallbackHell.js","original":{"line":100,"column":10}},{"generated":{"line":125,"column":11},"source":"asynchronous/CallbackHell.js","original":{"line":100,"column":11},"name":"post"},{"generated":{"line":125,"column":15},"source":"asynchronous/CallbackHell.js","original":{"line":100,"column":10}},{"generated":{"line":125,"column":16},"source":"asynchronous/CallbackHell.js","original":{"line":100,"column":0}},{"generated":{"line":126,"column":0},"source":"asynchronous/CallbackHell.js","original":{"line":102,"column":0},"name":"getPosts"},{"generated":{"line":126,"column":8},"source":"asynchronous/CallbackHell.js","original":{"line":102,"column":8}}],"sources":{"asynchronous/CallbackHell.js":"//callback hell\n/*setTimeout(()=>{\n    console.log(\"1 sec passed\");\n    setTimeout(()=>{\n        console.log(\"2 sec passed\");\n        setTimeout(()=>{\n            console.log(\"3 sec passed\");\n        },3000);\n    },20000);\n},1000);*/\n\n//solution to callback hell is promises -> modern js features\n//fetch -> new way of calling api\n\n//we no longer need to rely on events and callbacks passed into asynchronous function to handle\n//asynchronous result\n\n//chaining promises\n\n/*\nconst renderPost = post => {\n    console.log(post);\n}\nconst getCountryData = function () {\n    fetch(`https://jsonplaceholder.typicode.com/posts`)\n        .then(response => response.json())\n        .then(data => {\n            console.log(data[0]);\n            return fetch(`https://jsonplaceholder.typicode.com/posts`);\n        }).then(response => response.json())\n        .then(data => renderPost(data[1]))\n}\ngetCountryData();*/\n\n//handling rejected promises\n\n/*const renderError = function (err){\n    console.log(\"error\",err.message);\n}\n\nfetch(`https://jsonplaceholder.typicode.com/postsabc`)\n    .then(res => {\n        if(!res.ok)\n            throw new Error(`Posts not found ${res.status}`);\n        return res.json();\n    })\n    .then(data => console.log(data[0]))\n    .catch(err => renderError(err))\n    .finally(\"finally executed\");*/\n/*try {\n    const post = async function () {\n        const res = await fetch(`https://jsonplaceholder.typicode.com/post`);\n        if (!res.ok)\n            throw new Error(`error status ${res.status} and ${res.message}`)\n    }\n} catch\n    (err) {\n\n}\npost().then(data => console.log(data[0]));\nconsole.log('first');*/\n\n//using axios\nimport 'regenerator-runtime/runtime';\nimport axios from 'axios';\nconst BASE_URL = 'https://jsonplaceholder.typicode.com/posts';\n\nconst getPosts = async function (){\n    const {data} = await axios.get(`${BASE_URL}`);\n    console.log(data[0]);\n}\n\nconst post = {\n    title:'title',\n    body:'body'\n};\n\nconst createPost = async () => {\n    const {data} = await axios.post(BASE_URL, post);\n    console.log(data);\n}\n\nconst fakePosts = [];\nconst deletePost = async post => {\n    let posts = fakePosts;\n    try {\n        posts.filter(p => p.id != post.id);\n        await axios.delete(BASE_URL + '/' + post.id);\n    }catch (ex){\n        posts = fakePosts;\n    }\n}\n\ncreatePost();\ncreatePost();\ncreatePost();\n\ngetPosts();\n\ndeletePost(post);\n\ngetPosts();\n\n\n"},"lineCount":null}},"error":null,"hash":"33e3ba3bb8c6ad43da53923b2c552fa1","cacheData":{"env":{}}}